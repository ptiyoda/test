
def get_flexible_host_stats_granular(config: dict) -> dict:
    clusters: dict = defaultdict(lambda: defaultdict(lambda: defaultdict(lambda: defaultdict(int))))

    for field, options in config.items():
        source = options.get("source", "host")
        group_by_function = options.get("group_by_function", False)

        if source == "host":
            qs = Host.objects.values("id", "dynatrace__cluster__name", "function", field)
        else:
            qs = Host.objects.values("id", "dynatrace__cluster__name", "function", f"{source}__{field}")

        for row in qs:
            cluster = row["dynatrace__cluster__name"]
            value = (
                row.get(field)
                if source == "host"
                else row.get(f"{source}__{field}")
            ) or "unknown"

            if group_by_function:
                function = row["function"] if row["function"] in ["node", "ag"] else "other"
            else:
                function = "all"

            clusters[cluster][field][function][str(value)] += 1

    return clusters
